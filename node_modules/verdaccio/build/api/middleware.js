"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.serveFavicon = serveFavicon;
var _debug = _interopRequireDefault(require("debug"));
var _fs = _interopRequireDefault(require("fs"));
var _lodash = _interopRequireDefault(require("lodash"));
var _path = _interopRequireDefault(require("path"));
var _validator = _interopRequireDefault(require("validator"));
var _constants = require("../lib/constants");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const debug = (0, _debug.default)('verdaccio:middleware:favicon');
function serveFavicon(config) {
  return function (req, res, next) {
    try {
      var _config$web;
      // @ts-ignore
      const logoConf = config === null || config === void 0 ? void 0 : (_config$web = config.web) === null || _config$web === void 0 ? void 0 : _config$web.favicon;
      if (logoConf === '') {
        debug('favicon disabled');
        res.status(404);
      } else if (!_lodash.default.isEmpty(logoConf)) {
        debug('custom favicon');
        if (_validator.default.isURL(logoConf, {
          require_host: true,
          require_valid_protocol: true
        })) {
          debug('redirect to %o', logoConf);
          res.redirect(logoConf);
          return;
        } else {
          const faviconPath = _path.default.normalize(logoConf);
          debug('serving favicon from %o', faviconPath);
          _fs.default.access(faviconPath, _fs.default.constants.R_OK, err => {
            if (err) {
              debug('no read permissions to read: %o, reason:', logoConf, err === null || err === void 0 ? void 0 : err.message);
              return res.status(_constants.HTTP_STATUS.NOT_FOUND).end();
            } else {
              res.setHeader('content-type', 'image/x-icon');
              _fs.default.createReadStream(faviconPath).pipe(res);
              debug('rendered custom ico');
            }
          });
        }
      } else {
        res.setHeader('content-type', 'image/x-icon');
        _fs.default.createReadStream(_path.default.posix.join(__dirname, './web/html/favicon.ico')).pipe(res);
        debug('rendered ico');
      }
    } catch (err) {
      debug('error triggered, favicon not found');
      res.status(_constants.HTTP_STATUS.NOT_FOUND).end();
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVidWciLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9mcyIsIl9sb2Rhc2giLCJfcGF0aCIsIl92YWxpZGF0b3IiLCJfY29uc3RhbnRzIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJkZWJ1ZyIsImJ1aWxkRGVidWciLCJzZXJ2ZUZhdmljb24iLCJjb25maWciLCJyZXEiLCJyZXMiLCJuZXh0IiwiX2NvbmZpZyR3ZWIiLCJsb2dvQ29uZiIsIndlYiIsImZhdmljb24iLCJzdGF0dXMiLCJfIiwiaXNFbXB0eSIsInZhbGlkYXRvciIsImlzVVJMIiwicmVxdWlyZV9ob3N0IiwicmVxdWlyZV92YWxpZF9wcm90b2NvbCIsInJlZGlyZWN0IiwiZmF2aWNvblBhdGgiLCJwYXRoIiwibm9ybWFsaXplIiwiZnMiLCJhY2Nlc3MiLCJjb25zdGFudHMiLCJSX09LIiwiZXJyIiwibWVzc2FnZSIsIkhUVFBfU1RBVFVTIiwiTk9UX0ZPVU5EIiwiZW5kIiwic2V0SGVhZGVyIiwiY3JlYXRlUmVhZFN0cmVhbSIsInBpcGUiLCJwb3NpeCIsImpvaW4iLCJfX2Rpcm5hbWUiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvYXBpL21pZGRsZXdhcmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJ1aWxkRGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IGZzIGZyb20gJ2ZzJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB2YWxpZGF0b3IgZnJvbSAndmFsaWRhdG9yJztcblxuaW1wb3J0IHsgQ29uZmlnIH0gZnJvbSAnQHZlcmRhY2Npby90eXBlcyc7XG5cbmltcG9ydCB7IEhUVFBfU1RBVFVTIH0gZnJvbSAnLi4vbGliL2NvbnN0YW50cyc7XG5pbXBvcnQgeyAkTmV4dEZ1bmN0aW9uVmVyLCAkUmVxdWVzdEV4dGVuZCwgJFJlc3BvbnNlRXh0ZW5kIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5jb25zdCBkZWJ1ZyA9IGJ1aWxkRGVidWcoJ3ZlcmRhY2NpbzptaWRkbGV3YXJlOmZhdmljb24nKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHNlcnZlRmF2aWNvbihjb25maWc6IENvbmZpZykge1xuICByZXR1cm4gZnVuY3Rpb24gKHJlcTogJFJlcXVlc3RFeHRlbmQsIHJlczogJFJlc3BvbnNlRXh0ZW5kLCBuZXh0OiAkTmV4dEZ1bmN0aW9uVmVyKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIGNvbnN0IGxvZ29Db25mOiBzdHJpbmcgPSBjb25maWc/LndlYj8uZmF2aWNvbiBhcyBzdHJpbmc7XG4gICAgICBpZiAobG9nb0NvbmYgPT09ICcnKSB7XG4gICAgICAgIGRlYnVnKCdmYXZpY29uIGRpc2FibGVkJyk7XG4gICAgICAgIHJlcy5zdGF0dXMoNDA0KTtcbiAgICAgIH0gZWxzZSBpZiAoIV8uaXNFbXB0eShsb2dvQ29uZikpIHtcbiAgICAgICAgZGVidWcoJ2N1c3RvbSBmYXZpY29uJyk7XG4gICAgICAgIGlmIChcbiAgICAgICAgICB2YWxpZGF0b3IuaXNVUkwobG9nb0NvbmYsIHtcbiAgICAgICAgICAgIHJlcXVpcmVfaG9zdDogdHJ1ZSxcbiAgICAgICAgICAgIHJlcXVpcmVfdmFsaWRfcHJvdG9jb2w6IHRydWUsXG4gICAgICAgICAgfSlcbiAgICAgICAgKSB7XG4gICAgICAgICAgZGVidWcoJ3JlZGlyZWN0IHRvICVvJywgbG9nb0NvbmYpO1xuICAgICAgICAgIHJlcy5yZWRpcmVjdChsb2dvQ29uZik7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnN0IGZhdmljb25QYXRoID0gcGF0aC5ub3JtYWxpemUobG9nb0NvbmYpO1xuICAgICAgICAgIGRlYnVnKCdzZXJ2aW5nIGZhdmljb24gZnJvbSAlbycsIGZhdmljb25QYXRoKTtcbiAgICAgICAgICBmcy5hY2Nlc3MoZmF2aWNvblBhdGgsIGZzLmNvbnN0YW50cy5SX09LLCAoZXJyKSA9PiB7XG4gICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgIGRlYnVnKCdubyByZWFkIHBlcm1pc3Npb25zIHRvIHJlYWQ6ICVvLCByZWFzb246JywgbG9nb0NvbmYsIGVycj8ubWVzc2FnZSk7XG4gICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKEhUVFBfU1RBVFVTLk5PVF9GT1VORCkuZW5kKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICByZXMuc2V0SGVhZGVyKCdjb250ZW50LXR5cGUnLCAnaW1hZ2UveC1pY29uJyk7XG4gICAgICAgICAgICAgIGZzLmNyZWF0ZVJlYWRTdHJlYW0oZmF2aWNvblBhdGgpLnBpcGUocmVzKTtcbiAgICAgICAgICAgICAgZGVidWcoJ3JlbmRlcmVkIGN1c3RvbSBpY28nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzLnNldEhlYWRlcignY29udGVudC10eXBlJywgJ2ltYWdlL3gtaWNvbicpO1xuICAgICAgICBmcy5jcmVhdGVSZWFkU3RyZWFtKHBhdGgucG9zaXguam9pbihfX2Rpcm5hbWUsICcuL3dlYi9odG1sL2Zhdmljb24uaWNvJykpLnBpcGUocmVzKTtcbiAgICAgICAgZGVidWcoJ3JlbmRlcmVkIGljbycpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgZGVidWcoJ2Vycm9yIHRyaWdnZXJlZCwgZmF2aWNvbiBub3QgZm91bmQnKTtcbiAgICAgIHJlcy5zdGF0dXMoSFRUUF9TVEFUVVMuTk9UX0ZPVU5EKS5lbmQoKTtcbiAgICB9XG4gIH07XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLEdBQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFFLE9BQUEsR0FBQUgsc0JBQUEsQ0FB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